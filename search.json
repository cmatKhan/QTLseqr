[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"QTLseqr performs QTL mapping using Bulk Segregant Analysis of Next Gen Sequencing data Copyright (C) 2017-12-3  Ben Nathan Mansfeld  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. QTLseqr  Copyright (C) 2017-12-3  Ben Nathan Mansfeld This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"/articles/Yang_et_al_2013.html","id":"basic-usage","dir":"Articles","previous_headings":"","what":"Basic Usage","title":"Yang_et_al_2013","text":"data derived : Mapping Quantitative Trait Loci Underlying Cold Tolerance Rice Seedlings via High-Throughput Sequencing Pooled Extremes. Yang Z, Huang D, Tang W, Zheng Y, Liang K, et al. (2013) PLOS ONE 8(7): e68433. https://doi.org/10.1371/journal.pone.0068433 Raw reads downloaded NCBI Short Read Archive, aligned v7 Nipponbare genome SNPs called described GATK Best Practices. NOTE: data downloaded , subset Chr1. Additionally, 7 rows multi-allelic loci removed, loci DP (total depth) 0 either low high bulk. columns MULTI-ALLELIC = 'false', TYPE = 'snp' QUAL = 20e3 added. columns required QTLseqr 2.0, see ?makeBSAExperimentFromGatkTable. now recommend using nf-core/sarek pipeline variant calling, compliant GATK best practices.","code":""},{"path":"/articles/Yang_et_al_2013.html","id":"retrieve-paths-to-the-data","dir":"Articles","previous_headings":"Basic Usage","what":"Retrieve paths to the data","title":"Yang_et_al_2013","text":"","code":"gatk_table_file <- system.file(\"extdata\",                           \"Yang_et_al_2013_chr1.table.gz\",                           package = \"QTLseqr\",                           mustWork = TRUE) coldata_file <- system.file(\"extdata\",                           \"Yang_et_al_2013_coldata.csv.gz\",                           package = \"QTLseqr\",                           mustWork = TRUE)"},{"path":"/articles/Yang_et_al_2013.html","id":"construct-the-bsaexperiment-object","dir":"Articles","previous_headings":"Basic Usage","what":"Construct the BSAExperiment object","title":"Yang_et_al_2013","text":"","code":"bsae = makeBSAExperimentFromGatkTable(   gatk_table_path = gatk_table_file,   col_data_path = coldata_file,   metadata = list(     population_1_n = 25,     population_2_n = 25,     population_structure = \"F2\"))  comparisons(bsae) <- S4Vectors::DataFrame(population_1 = 'SRR834927',                                          population_2 = 'SRR834931')"},{"path":"/articles/Yang_et_al_2013.html","id":"filter","dir":"Articles","previous_headings":"Basic Usage","what":"Filter","title":"Yang_et_al_2013","text":"","code":"# create filters at the variant level ref_freq = rowSums(refDepth(bsae), na.rm = TRUE) / rowSums(totalDepth(bsae), na.rm = TRUE) ref_freq_mask = 0.2 <= ref_freq & ref_freq <= 0.8 depth_mask = rowSums(totalDepth(bsae), na.rm = TRUE) > 100 & rowSums(totalDepth(bsae), na.rm = TRUE) < 400  # add the variant level filter to the BSAExperiment object variantFilter(bsae) <- ref_freq_mask & depth_mask  # Create a filter at the variant AND sample level and add this to the object # Note that samples can also be masked with `sampleFilter()` matrixFilter(bsae) <- assay(bsae, \"GQ\") >= 99 & assay(bsae, \"DP\") > 40  # Once the filter vectors and matrix are added to the object, apply the filters # to create a filtered dataset filtered_bsae = applyFilter(bsae) #> There is no explicit filter column in the colData. Returning TRUE for all samples."},{"path":"/articles/Yang_et_al_2013.html","id":"generate-results","dir":"Articles","previous_headings":"Basic Usage","what":"Generate results","title":"Yang_et_al_2013","text":"","code":"bsae_results = createBSAResults(filtered_bsae, window_size=1e6) rowRanges(bsae_results) %>%   as_tibble() %>%   bind_cols(as_tibble(assay(bsae_results, 1))) %>%   mutate(start = start/1e6) %>%   ggplot() +   geom_hline(yintercept = 0, linetype='dashed', alpha = 0.8) +   geom_line(aes(start, CI_05, color = '5% CI'), alpha = 0.5, linewidth = 0.1) +   geom_line(aes(start, CI_95, color = '5% CI'), alpha = 0.5, linewidth = 0.1) +   geom_line(aes(start, CI_025, color = '2.5% CI'), alpha = 0.5, linewidth = 0.1) +   geom_line(aes(start, CI_975, color = '2.5% CI'), alpha = 0.5, linewidth = 0.1) +   scale_color_manual(values = c('5% CI' = 'red', '2.5% CI' = 'blue')) +   geom_line(aes(start, delta_snp_index_smoothed), linewidth=1.3) +   theme_bw() +   ggtitle(\"Chr1\") +   labs(x = \"Position (Mb)\", y = \"Delta SNP Index\") +   guides(color = guide_legend(override.aes = list(linewidth = 2)))"},{"path":"/articles/term_definitions.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Definition of Terms","text":"vignette serves define terms used code documentation package, includes discussion terms commonly used Bulk Segregant Analysis (BSA) Quantitative Trait Locus (QTL) literature chose re-name package.","code":""},{"path":"/articles/term_definitions.html","id":"qtl-seq-terms","dir":"Articles","previous_headings":"Introduction","what":"QTL-seq Terms","title":"Definition of Terms","text":"terms derived Takagi et al. (2013)","code":""},{"path":"/articles/term_definitions.html","id":"bsa-statistics-terms","dir":"Articles","previous_headings":"Introduction","what":"BSA Statistics Terms","title":"Definition of Terms","text":"terms derived Magwene (2011)","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ben Nathan Mansfeld. Author, maintainer. Rebecca Grumet. Thesis advisor. Chase Mateusiak. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Mansfeld B, Mateusiak C (2024). QTLseqr: QTL mapping using Bulk Segregant Analysis Next Generation Sequencing data.. R package version 2.0, https://github.com/bmansfeld/QTLseqr/.","code":"@Manual{,   title = {QTLseqr: QTL mapping using Bulk Segregant Analysis of Next Generation Sequencing data.},   author = {Ben Nathan Mansfeld and Chase Mateusiak},   year = {2024},   note = {R package version 2.0},   url = {https://github.com/bmansfeld/QTLseqr/}, }"},{"path":"/index.html","id":"qtlseqr-v0752","dir":"","previous_headings":"","what":"QTL mapping using Bulk Segregant Analysis of Next Generation Sequencing data.","title":"QTL mapping using Bulk Segregant Analysis of Next Generation Sequencing data.","text":"QTLseqr R package QTL mapping using NGS Bulk Segregant Analysis. QTLseqr still development offered guarantee.","code":""},{"path":[]},{"path":[]},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"QTL mapping using Bulk Segregant Analysis of Next Generation Sequencing data.","text":"can install QTLseqr github : Note: Apart regular package dependencies, Bioconductor tools use well, prompted install support Bioconductor, haven’t already. QTLseqr makes use C++ make tasks significantly faster (like counting SNPs). , order install QTLseqr github required install compiling tools (Rtools Xcode, Windows Mac, respectively). use QTLseqr published research, please cite: Mansfeld B.N. Grumet R, QTLseqr: R package bulk segregant analysis next-generation sequencing Plant Genome doi:10.3835/plantgenome2018.01.0006 also recommend citing paper corresponding method work . QTL-seq method: Takagi, H., Abe, ., Yoshida, K., Kosugi, S., Natsume, S., Mitsuoka, C., Uemura, ., Utsushi, H., Tamiru, M., Takuno, S., Innan, H., Cano, L. M., Kamoun, S. Terauchi, R. (2013), QTL-seq: rapid mapping quantitative trait loci rice whole genome resequencing DNA two bulked populations. Plant J, 74: 174–183. doi:10.1111/tpj.12105 G prime method: Magwene PM, Willis JH, Kelly JK (2011) Statistics Bulk Segregant Analysis Using Next Generation Sequencing. PLOS Computational Biology 7(11): e1002255. doi.org/10.1371/journal.pcbi.1002255","code":"# install devtools first to download packages from github install.packages(\"devtools\")  # use devtools to install QTLseqr devtools::install_github(\"bmansfeld/QTLseqr\")"},{"path":"/index.html","id":"abstract","dir":"","previous_headings":"","what":"Abstract","title":"QTL mapping using Bulk Segregant Analysis of Next Generation Sequencing data.","text":"Next Generation Sequencing Bulk Segregant Analysis (NGS-BSA) efficient detecting quantitative trait loci (QTL). Despite popularity NGS-BSA R statistical platform, R packages currently available NGS-BSA. present QTLseqr, R package NGS-BSA identifies QTL using two statistical approaches: QTL-seq G’. approaches use simulation method tricube smoothed G statistic, respectively, identify assess statistical significance QTL. QTLseqr, can import filter SNP data, calculate SNP distributions, relative allele frequencies, G’ values, log10(p-values), enabling identification plotting QTL.","code":""},{"path":[]},{"path":"/index.html","id":"example-figure","dir":"","previous_headings":"","what":"Example figure","title":"QTL mapping using Bulk Segregant Analysis of Next Generation Sequencing data.","text":"###detailed instructions please read vignette basic example shows import analyze NGS-BSA data.","code":"#load the package library(\"QTLseqr\")  #Set sample and file names population_2 <- \"SRR834931\" population_1 <- \"SRR834927\" file <- \"SNPs_from_GATK.table\"  #Choose which chromosomes will be included in the analysis (i.e. exclude smaller contigs) Chroms <- paste0(rep(\"Chr\", 12), 1:12)  #Import SNP data from file df <-     importFromGATK(         file = file,         population_2 = population_2,         population_1 = population_1,         chromList = Chroms      )  #Filter SNPs based on some criteria df_filt <-     filterSNPs(         SNPset = df,         refAlleleFreq = 0.20,         minTotalDepth = 100,         maxTotalDepth = 400,         minSampleDepth = 40,         minGQ = 99     )   #Run G' analysis df_filt <- runGprimeAnalysis(     SNPset = df_filt,     windowSize = 1e6,     outlierFilter = \"deltaSNP\")  #Run QTLseq analysis df_filt <- runQTLseqAnalysis(     SNPset = df_filt,     windowSize = 1e6,     popStruc = \"F2\",     bulkSize = c(25, 25),     replications = 10000,     intervals = c(95, 99) )  #Plot plotQTLStats(SNPset = df_filt, var = \"Gprime\", plotThreshold = TRUE, q = 0.01) plotQTLStats(SNPset = df_filt, var = \"deltaSNP\", plotIntervals = TRUE)  #export summary CSV getQTLTable(SNPset = df_filt, alpha = 0.01, export = TRUE, fileName = \"my_BSA_QTL.csv\")"},{"path":"/reference/BSAExperiment-class.html","id":null,"dir":"Reference","previous_headings":"","what":"A class to store data related to bulk segregant analysis (BSA) experiments. — BSAExperiment-class","title":"A class to store data related to bulk segregant analysis (BSA) experiments. — BSAExperiment-class","text":"BSAExperiment inherits RangedSummarizedExperiment class, subclass SummarizedExperiment class.","code":""},{"path":"/reference/BSAExperiment-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A class to store data related to bulk segregant analysis (BSA) experiments. — BSAExperiment-class","text":"BSAExperiment class adds comparisons slot RangedSummarizedExperiment slots, DataFrame object describes comparisons two populations.","code":""},{"path":"/reference/BSAExperiment-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"A class to store data related to bulk segregant analysis (BSA) experiments. — BSAExperiment-class","text":"comparisons DataFrame object describes comparisons two populations. columns population_1 population_2, levels subset colData sample column.","code":""},{"path":[]},{"path":"/reference/BSAExperiment.html","id":null,"dir":"Reference","previous_headings":"","what":"A constructor for the BSAExperiment class — BSAExperiment","title":"A constructor for the BSAExperiment class — BSAExperiment","text":"constructor BSAExperiment class","code":""},{"path":"/reference/BSAExperiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A constructor for the BSAExperiment class — BSAExperiment","text":"","code":"BSAExperiment(comparisons = DataFrame(), ...)"},{"path":"/reference/BSAExperiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A constructor for the BSAExperiment class — BSAExperiment","text":"comparisons Optional. default empty DataFrame(). Otherwise, dataframe describing comparisons two populations. Must two columns entries row names samples sample column colData. ... Additional arguments passed SummarizedExperiment","code":""},{"path":[]},{"path":"/reference/BSAResults-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Store statistical results of BSA Analysis — BSAResults-class","title":"Store statistical results of BSA Analysis — BSAResults-class","text":"BSAResults class subclass RangedSummarizedExperiment class, subclass SummarizedExperiment class.","code":""},{"path":"/reference/BSAResults-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Store statistical results of BSA Analysis — BSAResults-class","text":"BSAResults class used store results BSA analysis.","code":""},{"path":[]},{"path":"/reference/QTLseqr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"QTLseqr: QTL mapping using Bulk Segregant Analysis of Next Generation Sequencing data. — QTLseqr-package","title":"QTLseqr: QTL mapping using Bulk Segregant Analysis of Next Generation Sequencing data. — QTLseqr-package","text":"QTLseqr performs QTL mapping using Bulk Segregant Analysis Next Gen Sequencing data. package R implementation analyses described Magwene PM, Willis JH, Kelly JK (2011) Statistics Bulk Segregant Analysis Using Next Generation Sequencing. PLOS Computational Biology 7(11): e1002255. doi: 10.1371/journal.pcbi.1002255 Takagi, H., Abe, ., Yoshida, K., Kosugi, S., Natsume, S., Mitsuoka, C., Uemura, ., Utsushi,H., Tamiru, M., Takuno, S., Innan, H., Cano, L. M., Kamoun, S. Terauchi, R. (2013), QTL-seq: rapid mapping quantitative trait loci rice whole genome resequencing DNA two bulked populations. *Plant J*, 74: 174–183. doi:10.1111/tpj.12105","code":""},{"path":[]},{"path":"/reference/QTLseqr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"QTLseqr: QTL mapping using Bulk Segregant Analysis of Next Generation Sequencing data. — QTLseqr-package","text":"Maintainer: Ben Nathan Mansfeld mansfeld@msu.edu Authors: Chase Mateusiak chasem@wustl.edu (ORCID) contributors: Rebecca Grumet grumet@msu.edu [thesis advisor]","code":""},{"path":"/reference/aggregate.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate Data in BSAExperiment — aggregate,BSAExperiment-method","title":"Aggregate Data in BSAExperiment — aggregate,BSAExperiment-method","text":"Aggregates assay data BSAExperiment object based specified grouping factors colData. aggregation performed user-specified function, typically sum, mean, etc.","code":""},{"path":"/reference/aggregate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate Data in BSAExperiment — aggregate,BSAExperiment-method","text":"","code":"# S4 method for BSAExperiment aggregate(x, by, FUN, ...)"},{"path":"/reference/aggregate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate Data in BSAExperiment — aggregate,BSAExperiment-method","text":"x object class BSAExperiment. formula indicating grouping factors, e.g., ~ condition + sac_day. FUN Function apply group aggregation.","code":""},{"path":"/reference/altDepth.html","id":null,"dir":"Reference","previous_headings":"","what":"Getter/Setter of the BSAExperiment altDepth assay matrix — altDepth<-","title":"Getter/Setter of the BSAExperiment altDepth assay matrix — altDepth<-","text":"Set altDepth matrix BSAExperiment object, retrieve . getter, vector BSAEXperiment colnames, possibly length 1, may passed extract subset samples BSAExperiment object","code":""},{"path":"/reference/altDepth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Getter/Setter of the BSAExperiment altDepth assay matrix — altDepth<-","text":"","code":"# S4 method for BSAExperiment altDepth(object) <- value  # S4 method for BSAExperiment altDepth(object, sample_set = NULL)"},{"path":"/reference/altDepth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Getter/Setter of the BSAExperiment altDepth assay matrix — altDepth<-","text":"object BSAExperiment object value numeric matrix storing alt depth variant location BSAExperiment. dimensions matrix must equal dimension BSAExperiment, must row column names sample_set character vector samples, possibly length 1. entries sample_set must present sample column colData","code":""},{"path":"/reference/altDepth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getter/Setter of the BSAExperiment altDepth assay matrix — altDepth<-","text":"setter return BSAExperiment object alt depth slot updated. getter return matrix alt depths","code":""},{"path":[]},{"path":"/reference/applyFilter.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply the variant, sample and/or matrix filters to a BSAExperiment object — applyFilter","title":"Apply the variant, sample and/or matrix filters to a BSAExperiment object — applyFilter","text":"one selected, default, , filters set, corresponding entries BSAExperiment object either removed, case variant sample filter, entries corresponding assays slots set NA.","code":""},{"path":"/reference/applyFilter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply the variant, sample and/or matrix filters to a BSAExperiment object — applyFilter","text":"","code":"# S4 method for BSAExperiment applyFilter(   object,   variant_filter = TRUE,   sample_filter = TRUE,   matrix_filter = TRUE )"},{"path":"/reference/applyFilter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply the variant, sample and/or matrix filters to a BSAExperiment object — applyFilter","text":"object BSAExperiment object variant_filter Boolean, default TRUE. Set FALSE use variant filter remove variants BSAExperiment object. sample_filter Boolean, default TRUE. Set FALSE use sample filter remove samples BSAExperiment object. matrix_filter Boolean, default TRUE. Set FALSE use matrix filter remove entries BSAExperiment object.","code":""},{"path":"/reference/applyFilter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply the variant, sample and/or matrix filters to a BSAExperiment object — applyFilter","text":"BSAExperiment object filtered based supplied variant, sample /entry filters","code":""},{"path":[]},{"path":"/reference/calculateGSmoothPvalues.html","id":null,"dir":"Reference","previous_headings":"","what":"Non-parametric estimation of the null distribution of G' — calculateGSmoothPvalues","title":"Non-parametric estimation of the null distribution of G' — calculateGSmoothPvalues","text":"Estimate p-values smoothed G statistic (sometimes called G') based non-parametric estimation method described Magwene et al. 2011. smoothed G statistic vector filtered exclude outlier regions based outlier_vector -- see createBSAResults details. mode filtered G' set estimated using mlv options bw = 0.5, method = 'hsm'. Finally, mean variance set estimated using median mode p-values estimated log normal distribution.","code":""},{"path":"/reference/calculateGSmoothPvalues.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Non-parametric estimation of the null distribution of G' — calculateGSmoothPvalues","text":"","code":"calculateGSmoothPvalues(g_smoothed_vector, outlier_vector)"},{"path":"/reference/calculateGSmoothPvalues.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Non-parametric estimation of the null distribution of G' — calculateGSmoothPvalues","text":"g_smoothed_vector vector smoothed G values (tricube weighted G statistics, sometimes called G') outlier_vector boolean vector value TRUE, corresponding value g_smoothed_vector considered outlier","code":""},{"path":"/reference/calculateGStatistic.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the G statistic — calculateGStatistic","title":"Calculates the G statistic — calculateGStatistic","text":"G statisic G defined equation: $$G = 2*\\sum_{=1}^{4} n_{}*ln\\frac{obs(n_i)}{exp(n_i)}$$ SNP, \\(n_i\\) = 1 4 corresponds reference alternate allele depths bulk, described following table: ...\\(obs(n_i)\\) observed allele depths described data frame. Method 1 calculates G statistic using expected values assuming read depth equal alleles bulks: $$exp(n_1) = ((n_1 + n_2)*(n_1 + n_3))/(n_1 + n_2 + n_3 + n_4)$$ $$exp(n_2) = ((n_2 + n_1)*(n_2 + n_4))/(n_1 + n_2 + n_3 + n_4)$$ etc...","code":""},{"path":"/reference/calculateGStatistic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the G statistic — calculateGStatistic","text":"","code":"calculateGStatistic(depth_list)"},{"path":"/reference/calculateGStatistic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the G statistic — calculateGStatistic","text":"depth_list PopulationDepthList object containing reference alternate allele depths bulk. See populationDepths","code":""},{"path":"/reference/calculateGStatistic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the G statistic — calculateGStatistic","text":"vector G statistic values length ","code":""},{"path":[]},{"path":"/reference/comparisons.html","id":null,"dir":"Reference","previous_headings":"","what":"Getter/Setter of the BSAExperiment comparison slot — comparisons<-","title":"Getter/Setter of the BSAExperiment comparison slot — comparisons<-","text":"Getter/Setter BSAExperiment comparison slot","code":""},{"path":"/reference/comparisons.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Getter/Setter of the BSAExperiment comparison slot — comparisons<-","text":"","code":"# S4 method for BSAExperiment comparisons(object) <- value  # S4 method for BSAExperiment comparisons(object)"},{"path":"/reference/comparisons.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Getter/Setter of the BSAExperiment comparison slot — comparisons<-","text":"object BSAExperiment object value dataframe describing comparisons two populations. Must two columns entries row names samples sample column colData","code":""},{"path":"/reference/comparisons.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getter/Setter of the BSAExperiment comparison slot — comparisons<-","text":"setter return BSAExperiment object updated comparison slot getter return comparison slot's DataFrame","code":""},{"path":[]},{"path":"/reference/createBSAResults.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate marker frequency statistics for a objectxperiment object — createBSAResults","title":"Calculate marker frequency statistics for a objectxperiment object — createBSAResults","text":"Calculate marker frequency statistics objectxperiment object","code":""},{"path":"/reference/createBSAResults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate marker frequency statistics for a objectxperiment object — createBSAResults","text":"","code":"createBSAResults(   object,   comparison_index = NULL,   statistics = c(\"delta_snp_index\", \"g\"),   ... )"},{"path":"/reference/createBSAResults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate marker frequency statistics for a objectxperiment object — createBSAResults","text":"object BSAExperiment object comparison_index single integer value indicating row comparisons(object) utilize statistical comparison, vector integers indicating multiple comparisons calculate statistics character vector indicating statistics calculate. Currently 'delta_snp_index' 'g' valid choices ... Arguments passed smoothAlleleFrequencyMetric, g_statistics_results window_size window size (base pairs) bracketing allele calculate statitics. Magwene et. al recommend window size ~25 cM, also recommend optionally trying several window sizes test peaks - undersmoothed.","code":""},{"path":"/reference/createPopulationDepthList.html","id":null,"dir":"Reference","previous_headings":"","what":"Population Depth List Object Constructor — createPopulationDepthList","title":"Population Depth List Object Constructor — createPopulationDepthList","text":"Population Depth List Object Constructor","code":""},{"path":"/reference/createPopulationDepthList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Population Depth List Object Constructor — createPopulationDepthList","text":"","code":"createPopulationDepthList(depth_list)"},{"path":"/reference/createPopulationDepthList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Population Depth List Object Constructor — createPopulationDepthList","text":"depth_list list two elements, population_1 population_2. elements list two elements, ref alt.","code":""},{"path":"/reference/deltaSnpIndex.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate \\(\\Delta\\)(Alt Allele Frequency) Between Two Populations — deltaSnpIndex","title":"Calculate \\(\\Delta\\)(Alt Allele Frequency) Between Two Populations — deltaSnpIndex","text":"Calculate difference alternate allele frequency population_2 population_1","code":""},{"path":"/reference/deltaSnpIndex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate \\(\\Delta\\)(Alt Allele Frequency) Between Two Populations — deltaSnpIndex","text":"","code":"# S4 method for BSAExperiment deltaSnpIndex(object, population_1_sample, population_2_sample)"},{"path":"/reference/deltaSnpIndex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate \\(\\Delta\\)(Alt Allele Frequency) Between Two Populations — deltaSnpIndex","text":"object BSAExperiment object population_1_sample name sample used first population. context Takagi 2013 paper, 'low bulk' sample. population_2_sample name sample used second population. context Takagi 2013 paper, 'high bulk' sample.","code":""},{"path":"/reference/deltaSnpIndex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate \\(\\Delta\\)(Alt Allele Frequency) Between Two Populations — deltaSnpIndex","text":"numeric vector results \\(Population_2\\ Alternate\\ Allele\\ Frequency\\ -\\ Population_1\\ Alternate\\ Allele\\ Frequency\\)","code":""},{"path":[]},{"path":"/reference/deltaSnpIndex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate \\(\\Delta\\)(Alt Allele Frequency) Between Two Populations — deltaSnpIndex","text":"","code":"# Assuming `bsae` is a BSAExperiment object with populations \"Pop1\" # and \"Pop2\" delta_freqs <- deltaSnpIndex(bsae, \"Pop1\", \"Pop2\") #> Error in value[[3L]](cond): At least one of the provided samples is not present in the colnames of the BSAExperiment object  # View the first few differences in allele frequency head(delta_freqs) #> Error in h(simpleError(msg, call)): error in evaluating the argument 'x' in selecting a method for function 'head': object 'delta_freqs' not found"},{"path":"/reference/delta_snp_index_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a single comparison DataFrame — delta_snp_index_results","title":"Create a single comparison DataFrame — delta_snp_index_results","text":"internal function creates DataFrame QTLseqr results. createBSAResult() used general users returns BSAResults object includes rowRanges colData. However, exposed order provide documentation arguments may passed createBSAResults() order adjust smoothing filtering conducted, results returned.","code":""},{"path":"/reference/delta_snp_index_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a single comparison DataFrame — delta_snp_index_results","text":"","code":"delta_snp_index_results(object, population_1_sample, population_2_sample, ...)"},{"path":"/reference/delta_snp_index_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a single comparison DataFrame — delta_snp_index_results","text":"object objectxperiment object population_1_sample One samples object$sample act \"low bulk\" base sample delta snp index calculation. population_2_sample One samples object$sample act \"high bulk\" comparison sample delta snp index calculation. ... arguments passed locfit subsequently locfit.raw() (lfproc). Usefull cases get \"vertex space warnings\"; Set maxk higher default 100. See locfit.raw().","code":""},{"path":"/reference/dot-erfinv.html","id":null,"dir":"Reference","previous_headings":"","what":"Complementary Error Function — .erfinv","title":"Complementary Error Function — .erfinv","text":"Complementary Error Function","code":""},{"path":"/reference/dot-erfinv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Complementary Error Function — .erfinv","text":"","code":".erfinv(y)"},{"path":"/reference/dot-erfinv.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Complementary Error Function — .erfinv","text":"copied PRACMA, distributed GNU v3+","code":""},{"path":"/reference/dot-erfinv.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Complementary Error Function — .erfinv","text":"Copyright (c) 2015 Hans W Borchers","code":""},{"path":"/reference/dot-parse_ad_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse AD Table — .parse_ad_table","title":"Parse AD Table — .parse_ad_table","text":"function takes matrix AD data, splits element comma, extracts second value, converts values numeric, reshapes result matrix number rows original AD data.","code":""},{"path":"/reference/dot-parse_ad_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse AD Table — .parse_ad_table","text":"","code":".parse_ad_table(ad_data)"},{"path":"/reference/dot-parse_ad_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse AD Table — .parse_ad_table","text":"ad_data matrix AD data.","code":""},{"path":"/reference/dot-parse_ad_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse AD Table — .parse_ad_table","text":"numeric matrix element second value corresponding element original AD data.","code":""},{"path":"/reference/dot-parse_ad_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse AD Table — .parse_ad_table","text":"","code":"ad_data <- matrix(c(\"1,149\", \"240,3\", \"225,65\", \"236,56\", \"406,141\"), nrow = 5) .parse_ad_table(ad_data) #>      [,1] #> [1,]  149 #> [2,]    3 #> [3,]   65 #> [4,]   56 #> [5,]  141"},{"path":"/reference/dot-parse_gt_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse GT Table — .parse_gt_table","title":"Parse GT Table — .parse_gt_table","text":"function takes data frame GT data reference column, compares GT value reference, returns numeric matrix element 0 corresponding GT value equal reference 1 otherwise.","code":""},{"path":"/reference/dot-parse_gt_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse GT Table — .parse_gt_table","text":"","code":".parse_gt_table(gt_data, ref)"},{"path":"/reference/dot-parse_gt_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse GT Table — .parse_gt_table","text":"gt_data data frame GT data. ref character vector reference values. chunk_size integer sets ","code":""},{"path":"/reference/dot-parse_gt_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse GT Table — .parse_gt_table","text":"numeric matrix element 0 corresponding GT value equal reference 1 otherwise.","code":""},{"path":"/reference/dot-parse_gt_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse GT Table — .parse_gt_table","text":"","code":"gt_data <- data.frame(sample1 = c(\"A\", \"G\", \"C\", \"T\", \"A\"),                       sample2 = c(\"G\", \"A\", \"C\", \"T\", \"G\")) ref <- c(\"A\", \"G\", \"C\", \"T\", \"A\") .parse_gt_table(gt_data, ref) #>      sample1 sample2 #> [1,]       0       1 #> [2,]       0       1 #> [3,]       0       0 #> [4,]       0       0 #> [5,]       0       1"},{"path":"/reference/dot-read_in_gatk_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Read in GATK Table — .read_in_gatk_table","title":"Read in GATK Table — .read_in_gatk_table","text":"function reads GATK table file extracts sample names. checks table contains required columns sample columns.","code":""},{"path":"/reference/dot-read_in_gatk_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read in GATK Table — .read_in_gatk_table","text":"","code":".read_in_gatk_table(   gatk_table_path,   drop_samples = c(),   keep_multiallelic = FALSE )"},{"path":"/reference/dot-read_in_gatk_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read in GATK Table — .read_in_gatk_table","text":"gatk_table_path path GATK table file. drop_samples character vector sample names drop GATK table. Default empty character vector. keep_multiallelic boolean indicating whether keep multi-allelic variants. Note: multi_allelic locations currently supported, bother setting TRUE time . Default FALSE.","code":""},{"path":"/reference/dot-read_in_gatk_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read in GATK Table — .read_in_gatk_table","text":"list containing GATK table sample names.","code":""},{"path":"/reference/dot-read_in_gatk_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read in GATK Table — .read_in_gatk_table","text":"","code":"gatk_table_path <- system.file(\"extdata\", \"your_gatk_table.txt\", package = \"your_package_name\") result <- .read_in_gatk_table(gatk_table_path) #> Warning: file(\"\") only supports open = \"w+\" and open = \"w+b\": using the former #> Error in read.table(gatk_table_path, header = TRUE, stringsAsFactors = FALSE,     check.names = FALSE): no lines available in input names(result) #> Error in eval(expr, envir, enclos): object 'result' not found"},{"path":"/reference/extract_alt_freq_dataframe.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract alternative frequency data frame — extract_alt_freq_dataframe","title":"Extract alternative frequency data frame — extract_alt_freq_dataframe","text":"Extract alternative frequency data frame","code":""},{"path":"/reference/extract_alt_freq_dataframe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract alternative frequency data frame — extract_alt_freq_dataframe","text":"","code":"extract_alt_freq_dataframe(   bsae_sample_subset,   depth_threshold = 10,   ref_freq_thres = 0.2,   hetero_freq_thres = c(0.4, 0.6),   alt_freq_thres = 0.9,   neighborhood_size = 20,   verbose = FALSE,   ncpus = 1,   ... )"},{"path":"/reference/extract_alt_freq_dataframe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract alternative frequency data frame — extract_alt_freq_dataframe","text":"bsae_sample_subset SummarizedExperiment object subset specific sample. depth_threshold Integer specifying minimum depth required variant considered. Default 10. ref_freq_thres Numeric specifying maximum value given variant 'rounded' REF (0) smoothed allele frequency column hetero_freq_thres Numeric vector specifying range values given variant 'rounded' HET (0.5) smoothed allele frequency column alt_freq_thres Numeric specifying minimum value given variant 'rounded' ALT (1) smoothed allele frequency column neighborhood_size Integer specifying number data points around given variant considered determining variant 'noisy', matching immediate neighbors. Default 20. verbose TRUE, message reporting current sample displayed 2, sample chromosome messages displayed. ncpus Number cores use parallel processing. ... Arguments passed changepoint.np::cpt.np data vector, ts object matrix containing data within wish find changepoint.  data matrix, row considered separate dataset. penalty Choice \"None\", \"SIC\", \"BIC\", \"MBIC\", AIC\", \"Hannan-Quinn\", \"Manual\" \"CROPS\" penalties.  Manual specified, manual penalty contained pen.value parameter. CROPS specified, penalty range contained pen.value parameter; note vector length 2 contains minimum maximum penalty value.  Note CROPS can used method \"PELT\". predefined penalties listed count changepoint parameter, postfix 0 e.g.\"SIC0\" count changepoint parameter. pen.value value penalty using Manual penalty option.  vector length 2 (min,max) using CROPS penalty. method Currently method \"PELT\". test.stat assumed test statistic/distribution data. Currently \"empirical_distribution\". class Logical. TRUE object class cpt returned. minseglen Positive integer giving minimum segment length (number observations changes), default minimum allowed theory. nquantiles number quantiles calculate test.stat = \"empirical_distribution\".","code":""},{"path":"/reference/extract_alt_freq_dataframe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract alternative frequency data frame — extract_alt_freq_dataframe","text":"tibble containing processed alternative frequency data.","code":""},{"path":"/reference/filter_args.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function to filter arguments — filter_args","title":"Utility function to filter arguments — filter_args","text":"Utility function filter arguments","code":""},{"path":"/reference/filter_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function to filter arguments — filter_args","text":"","code":"filter_args(FUN, ...)"},{"path":"/reference/filter_args.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function to filter arguments — filter_args","text":"FUN function ... arguments extract ... args based FUN","code":""},{"path":"/reference/filter_args.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function to filter arguments — filter_args","text":"list arguments valid FUN","code":""},{"path":"/reference/find_breakpoints.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Breakpoints in Allele Frequency Data — find_breakpoints","title":"Find Breakpoints in Allele Frequency Data — find_breakpoints","text":"Identifies breakpoints processed allele frequency data, typically detect genomic regions interest copy number variations significant shifts allele frequency.","code":""},{"path":"/reference/find_breakpoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Breakpoints in Allele Frequency Data — find_breakpoints","text":"","code":"find_breakpoints(df, ...)"},{"path":"/reference/find_breakpoints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Breakpoints in Allele Frequency Data — find_breakpoints","text":"df data frame containing smoothed allele frequencies relevant data.","code":""},{"path":"/reference/find_breakpoints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Breakpoints in Allele Frequency Data — find_breakpoints","text":"data frame indicating positions identified breakpoints characteristics.","code":""},{"path":"/reference/g_statistics_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate g statistics and return a DataFrame of results — g_statistics_results","title":"Calculate g statistics and return a DataFrame of results — g_statistics_results","text":"internal function -- exposed API. However, accessible indirectly createBSAResults(). function calculates G statistic SNP objectxperiment object returns DataFrame results.","code":""},{"path":"/reference/g_statistics_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate g statistics and return a DataFrame of results — g_statistics_results","text":"","code":"g_statistics_results(   object,   population_1_sample,   population_2_sample,   outlier_filter_method = \"delta_snp_index\",   delta_snp_index_threshold = 0.1,   hampel_filter_threshold = 5.2,   ... )"},{"path":"/reference/g_statistics_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate g statistics and return a DataFrame of results — g_statistics_results","text":"object objectxperiment object population_1_sample One samples object$sample act \"low bulk\" base sample delta snp index calculation. population_2_sample One samples object$sample act \"high bulk\" comparison sample delta snp index","code":""},{"path":"/reference/g_statistics_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate g statistics and return a DataFrame of results — g_statistics_results","text":"DataFrame G statistic results","code":""},{"path":"/reference/get_mode.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Mode of a Numeric Vector — get_mode","title":"Calculate Mode of a Numeric Vector — get_mode","text":"Computes mode given numeric vector, value appears frequently.","code":""},{"path":"/reference/get_mode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Mode of a Numeric Vector — get_mode","text":"","code":"get_mode(v)"},{"path":"/reference/get_mode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Mode of a Numeric Vector — get_mode","text":"v Numeric vector.","code":""},{"path":"/reference/get_mode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Mode of a Numeric Vector — get_mode","text":"mode vector.","code":""},{"path":"/reference/hampelFilterGRanges.html","id":null,"dir":"Reference","previous_headings":"","what":"Hampel Filter for Genomic Data in GRanges Object — hampelFilterGRanges","title":"Hampel Filter for Genomic Data in GRanges Object — hampelFilterGRanges","text":"Applies Hampel filter metric GRanges object identify outliers. filter uses genomic windows compute median median absolute deviation (MAD) sample, identifies outliers. See MATLAB hampel filter documentation details: https://www.mathworks.com/help/dsp/ref/hampelfilter.html","code":""},{"path":"/reference/hampelFilterGRanges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hampel Filter for Genomic Data in GRanges Object — hampelFilterGRanges","text":"","code":"hampelFilterGRanges(   gr,   metric_colname = \"metric\",   window_size = 2e+06,   hampel_threshold_multiplier = 5.2,   ncpus = 1,   parallel_backend = NULL )"},{"path":"/reference/hampelFilterGRanges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hampel Filter for Genomic Data in GRanges Object — hampelFilterGRanges","text":"gr GRanges object containing genomic data. metric_colname name metric stored metadata columns (mcols) GRanges object. window_size size genomic window used computing median MAD, base pairs (e.g., 1e6 1 Mb). hampel_threshold_multiplier numeric value specifying number median absolute deviations median use threshold filtering outlier regions. Default 5.2.","code":""},{"path":"/reference/hampelFilterGRanges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hampel Filter for Genomic Data in GRanges Object — hampelFilterGRanges","text":"boolean vector length input GRanges object TRUE indicates corresponding metric value outlier.","code":""},{"path":"/reference/hampelFilterGRanges.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hampel Filter for Genomic Data in GRanges Object — hampelFilterGRanges","text":"","code":"gr <- GRanges(   seqnames = c(\"chr1\", \"chr1\", \"chr1\", \"chr1\", \"chr1\"),   ranges = IRanges(start = c(1, 2e5, 4e5, 6e5, 8e5), width = 1),   metric = c(1, 2, 100, 3, 2) ) outliers <- hampelFilterGRanges(gr, \"metric\", window_size = 1e6) #> Error in GenomicRanges::tileGenome(seqinfo(gr), tilewidth = window_size,     cut.last.tile.in.chrom = TRUE): 'seqlengths' contains NAs or negative values print(outliers) #> Error in eval(expr, envir, enclos): object 'outliers' not found"},{"path":"/reference/is_noisy.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine if a Data Point is Noisy — is_noisy","title":"Determine if a Data Point is Noisy — is_noisy","text":"Checks whether data point vector allele frequencies considered noisy based neighborhood defined specified window size. evaluates left right windows separately considers point noisy match mode either window.","code":""},{"path":"/reference/is_noisy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine if a Data Point is Noisy — is_noisy","text":"","code":"is_noisy(freq_vector, index, neighborhood_size)"},{"path":"/reference/is_noisy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine if a Data Point is Noisy — is_noisy","text":"freq_vector Numeric vector allele frequencies. index Integer, index data point check. neighborhood_size Integer, number points either side index include neighborhood.","code":""},{"path":"/reference/is_noisy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine if a Data Point is Noisy — is_noisy","text":"Logical indicating whether data point noisy.","code":""},{"path":"/reference/makeBSAExperimentFromGatkTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a BSAExperiment object from a GATK varianttotable Table — makeBSAExperimentFromGatkTable","title":"Create a BSAExperiment object from a GATK varianttotable Table — makeBSAExperimentFromGatkTable","text":"function reads GATK varianttotable output table column data file create BSAExperiment object. GATK VariantsToTable command used generate input table. See GATK varianttotable documentation details.","code":""},{"path":"/reference/makeBSAExperimentFromGatkTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a BSAExperiment object from a GATK varianttotable Table — makeBSAExperimentFromGatkTable","text":"","code":"makeBSAExperimentFromGatkTable(   gatk_table_path,   col_data_path,   drop_samples = c(),   metadata = list() )"},{"path":"/reference/makeBSAExperimentFromGatkTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a BSAExperiment object from a GATK varianttotable Table — makeBSAExperimentFromGatkTable","text":"gatk_table_path path GATK table file. col_data_path Optional. null, samplenames gatk table used create single column metadata column name sample. However, additional sample metdata can provided argument. NULL, must character string specifying path sample metadata. must csv file extention .csv. column sample must exist, must correspond sample names GATK varianttotable table. drop_samples character vector sample names drop GATK table. Default empty character vector. metadata list containing metadata BSAExperiment object. Recognized entries population_structure, may 'F2' F2 population 'RIL' Recombinant Inbred Lines, population_1_n, number individuals 'low bulk' sample, population_2_n, number individuals 'high bulk' sample. population_2_n provided, equal population_1_n default.","code":""},{"path":"/reference/makeBSAExperimentFromGatkTable.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a BSAExperiment object from a GATK varianttotable Table — makeBSAExperimentFromGatkTable","text":"create input table function, use following GATK VariantsToTable command:","code":"gatk VariantsToTable \\    -V input.vcf \\    --split-multi-allelic \\    -F CHROM -F POS -F REF -F ALT -F MULTI-ALLELIC -F TYPE -F QUAL \\    -GF AD -GF DP -GF PL -GF GQ -GF GT \\    -O output.table"},{"path":"/reference/makeBSAExperimentFromGatkTable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a BSAExperiment object from a GATK varianttotable Table — makeBSAExperimentFromGatkTable","text":"","code":"if (FALSE) { gatk_table_path <- \"path/to/gatk_table.table\" col_data_path <- \"path/to/col_data.csv\" drop_samples <- c(\"sample1\", \"sample2\") metadata <- list(population_structure = 'RIL', population_1_n = 20)  bsa_experiment <- makeBSAExperimentFromGatkTable(gatk_table_path, col_data_path, drop_samples, metadata) }"},{"path":"/reference/matrixFilter.html","id":null,"dir":"Reference","previous_headings":"","what":"Getter and Setter of the BSAExperiment matrixFilter matrix — matrixFilter<-","title":"Getter and Setter of the BSAExperiment matrixFilter matrix — matrixFilter<-","text":"matrixFilter boolean matrix nrow(object) x ncol(object) stored assays slot. value FALSE indicates entry matricies assays slot correspond entry matrixFilter set NA.","code":""},{"path":"/reference/matrixFilter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Getter and Setter of the BSAExperiment matrixFilter matrix — matrixFilter<-","text":"","code":"# S4 method for BSAExperiment matrixFilter(object) <- value  # S4 method for BSAExperiment matrixFilter(object)"},{"path":"/reference/matrixFilter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Getter and Setter of the BSAExperiment matrixFilter matrix — matrixFilter<-","text":"object BSAExperiment object value boolean matrix dim . value FALSE indicates corresponding entry assay data matrices set NA.","code":""},{"path":"/reference/matrixFilter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getter and Setter of the BSAExperiment matrixFilter matrix — matrixFilter<-","text":"setter return BSAExperiment object matrix filter matrix added assays getter return boolean matrix","code":""},{"path":[]},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"/reference/plot_breakpoints.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Breakpoints on Allele Frequency Data — plot_breakpoints","title":"Plot Breakpoints on Allele Frequency Data — plot_breakpoints","text":"function creates plot allele frequency data sample chromosome, breakpoints overlaid dashed vertical lines.","code":""},{"path":"/reference/plot_breakpoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Breakpoints on Allele Frequency Data — plot_breakpoints","text":"","code":"plot_breakpoints(   allele_freq_df,   breakpoint_df,   allele_freq_stat,   de_noise = FALSE,   sample_set = c(),   seqnames_set = c(),   point_size = 0.7 )"},{"path":"/reference/plot_breakpoints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Breakpoints on Allele Frequency Data — plot_breakpoints","text":"allele_freq_df data frame containing allele frequency data. breakpoint_df data frame containing breakpoint data. allele_freq_stat Character string specifying column name allele frequency statistic plot. existing column allele_freq_df. sample_set Character vector specifying samples include plot. empty, samples included. seqnames_set Character vector specifying seqnames include plot. empty, seqnames included.","code":""},{"path":"/reference/plot_breakpoints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Breakpoints on Allele Frequency Data — plot_breakpoints","text":"ggplot object displaying allele frequency data breakpoints overlaid, facilitating visual assessment genomic variations.","code":""},{"path":"/reference/populationDepths.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract population alt and ref allele depths from a BSAExperiment object — populationDepths","title":"Extract population alt and ref allele depths from a BSAExperiment object — populationDepths","text":"Extract population alt ref allele depths BSAExperiment object","code":""},{"path":"/reference/populationDepths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract population alt and ref allele depths from a BSAExperiment object — populationDepths","text":"","code":"# S4 method for BSAExperiment populationDepths(object, population_1_sample, population_2_sample)"},{"path":"/reference/populationDepths.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract population alt and ref allele depths from a BSAExperiment object — populationDepths","text":"object BSAExperiment object population_1_sample name sample used first population. context Takagi 2013 paper, 'low bulk' sample. population_2_sample name sample used second population. context Takagi 2013 paper, 'high bulk' sample.","code":""},{"path":[]},{"path":"/reference/process_chromosome.html","id":null,"dir":"Reference","previous_headings":"","what":"Process Chromosome Data — process_chromosome","title":"Process Chromosome Data — process_chromosome","text":"helper function used extract_alt_freq_dataframe process data ' chromosome separately. function designed used internally exported.","code":""},{"path":"/reference/process_chromosome.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process Chromosome Data — process_chromosome","text":"","code":"process_chromosome(   chr_sample_subset,   depth_threshold,   ref_freq_thres,   hetero_freq_thres,   alt_freq_thres,   neighborhood_size,   verbose )"},{"path":"/reference/process_chromosome.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process Chromosome Data — process_chromosome","text":"depth_threshold Integer specifying minimum depth required variant considered. Default 10. ref_freq_thres Numeric specifying maximum value given variant 'rounded' REF (0) smoothed allele frequency column hetero_freq_thres Numeric vector specifying range values given variant 'rounded' HET (0.5) smoothed allele frequency column alt_freq_thres Numeric specifying minimum value given variant 'rounded' ALT (1) smoothed allele frequency column neighborhood_size Integer specifying number data points around given variant considered determining variant 'noisy', matching immediate neighbors. Default 20. verbose Logical indicating whether print processing messages. chr Character string specifying chromosome name. bsae_sample_subset SummarizedExperiment object subset specific sample.","code":""},{"path":"/reference/process_chromosome.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process Chromosome Data — process_chromosome","text":"data frame processed allele frequency data specified chromosome.","code":""},{"path":"/reference/refDepth.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the Reference Depths from the BSAExperiment — refDepth","title":"Get the Reference Depths from the BSAExperiment — refDepth","text":"Optionally, vector BSAEXperiment colnames, possibly length 1, may passed extract subset samples BSAExperiment object","code":""},{"path":"/reference/refDepth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the Reference Depths from the BSAExperiment — refDepth","text":"","code":"# S4 method for BSAExperiment refDepth(object, sample_set = NULL)"},{"path":"/reference/refDepth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the Reference Depths from the BSAExperiment — refDepth","text":"object BSAExperiment object sample_set character vector samples, possibly length 1. entries sample_set must present sample column colData","code":""},{"path":"/reference/refDepth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the Reference Depths from the BSAExperiment — refDepth","text":"matrix total depths","code":""},{"path":[]},{"path":"/reference/sampleFilter.html","id":null,"dir":"Reference","previous_headings":"","what":"Getter and Setter of the BSAExperiment sampleFilter vector — sampleFilter<-","title":"Getter and Setter of the BSAExperiment sampleFilter vector — sampleFilter<-","text":"sampleFilter boolean vector added column colData. value FALSE indicates entire sample removed filtered dataset. passing vector setter, must equal number columns BSAExperiment object","code":""},{"path":"/reference/sampleFilter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Getter and Setter of the BSAExperiment sampleFilter vector — sampleFilter<-","text":"","code":"# S4 method for BSAExperiment sampleFilter(object) <- value  # S4 method for BSAExperiment sampleFilter(object)"},{"path":"/reference/sampleFilter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Getter and Setter of the BSAExperiment sampleFilter vector — sampleFilter<-","text":"object BSAExperiment object value boolean vector length equal columns BSAExperiment object. value FALSE indicates sample removed filtered dataset.","code":""},{"path":"/reference/sampleFilter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getter and Setter of the BSAExperiment sampleFilter vector — sampleFilter<-","text":"setter return BSAExperiment object sample filter vector added colData. getter return boolean vector","code":""},{"path":[]},{"path":"/reference/simulateDeltaSnpIndex.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulates the change in Alternate Allele Frequency between population_2 and population_1 — simulateDeltaSnpIndex","title":"Simulates the change in Alternate Allele Frequency between population_2 and population_1 — simulateDeltaSnpIndex","text":"function simulates change alternate allele frequency two populations replication","code":""},{"path":"/reference/simulateDeltaSnpIndex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulates the change in Alternate Allele Frequency between population_2 and population_1 — simulateDeltaSnpIndex","text":"","code":"simulateDeltaSnpIndex(   depth,   population_1_snp_index,   population_2_snp_index,   replications = 10000,   snp_index_filter = NULL )"},{"path":"/reference/simulateDeltaSnpIndex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulates the change in Alternate Allele Frequency between population_2 and population_1 — simulateDeltaSnpIndex","text":"depth integer vector specifying read depths simulate alternate allele frequency calls. Defaults sequence 1 100. population_1_snp_index numeric. alternate allele frequency population 1. population_2_snp_index numeric. alternate allele frequency population 2. replications integer specifying number bootstrap replications perform. affects robustness accuracy simulated confidence intervals. Defaults 10000. snp_index_filter numeric value specifying minimum alt allele frequency filter threshold. Used exclude low alt allele frequency values simulation. Defaults 0.3.","code":""},{"path":"/reference/simulateDeltaSnpIndex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulates the change in Alternate Allele Frequency between population_2 and population_1 — simulateDeltaSnpIndex","text":"Returns vector length replicates simulated \\(\\Delta\\)(Alt Allele Frequency)","code":""},{"path":"/reference/simulateDeltaSnpIndexCI.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate \\(\\Delta\\)(Alt Allele Frequency) Confidence Intervals — simulateDeltaSnpIndexCI","title":"Simulate \\(\\Delta\\)(Alt Allele Frequency) Confidence Intervals — simulateDeltaSnpIndexCI","text":"function simulates \\(\\Delta\\)(Alt Allele Frequency) confidence intervals two populations individuals, given specified population structure. calculates alternate allele frequencies within bulk simulates alternate allele frequency values across range depths determine confidence intervals \\(\\Delta\\)(Alt Allele Frequency). process repeated specified number replications ensure robustness confidence interval estimates.","code":""},{"path":"/reference/simulateDeltaSnpIndexCI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate \\(\\Delta\\)(Alt Allele Frequency) Confidence Intervals — simulateDeltaSnpIndexCI","text":"","code":"simulateDeltaSnpIndexCI(   population_1_n,   population_structure,   population_2_n = population_1_n,   depth_vector = 1:100,   replications = 10000,   snp_index_filter = 0.3,   ci_lower_bounds = c(0.05, 0.025) )"},{"path":"/reference/simulateDeltaSnpIndexCI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate \\(\\Delta\\)(Alt Allele Frequency) Confidence Intervals — simulateDeltaSnpIndexCI","text":"population_1_n positive integer specifying number individuals first bulk. population_structure string indicating population structure individuals. Valid options 'F2' F2 population 'RIL' Recombinant Inbred Lines. parameter influences alternate allele frequencies simulated. population_2_n positive integer specifying number individuals second bulk. Defaults number population_1_n. replications integer specifying number bootstrap replications perform. affects robustness accuracy simulated confidence intervals. Defaults 10000. snp_index_filter numeric value specifying minimum alt allele frequency filter threshold. Used exclude low alt allele frequency values simulation. Defaults 0.3. ci_lower_bounds numeric vector probabilities values 0,0.5, specifying confidence levels calculate confidence intervals. example, c(0.05, 0.025) corresponds 95% 97.5% confidence intervals. Defaults c(0.05, 0.025). depth integer vector specifying read depths simulate alternate allele frequency calls. Defaults sequence 1 100.","code":""},{"path":"/reference/simulateDeltaSnpIndexCI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate \\(\\Delta\\)(Alt Allele Frequency) Confidence Intervals — simulateDeltaSnpIndexCI","text":"data frame row representing specified depth column representing \\(\\Delta\\)(Alt Allele Frequency) threshold corresponding confidence interval depth. first column specifies depth, subsequent columns named according specified confidence intervals.","code":""},{"path":"/reference/simulateDeltaSnpIndexCI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate \\(\\Delta\\)(Alt Allele Frequency) Confidence Intervals — simulateDeltaSnpIndexCI","text":"","code":"simulateDeltaSnpIndexCI(   population_1_n = 50,   population_structure = \"F2\",   depth = 1:10,   replications = 100,   filter = 0.3,   intervals = c(0.05, 0.025) ) #> Error in simulateDeltaSnpIndexCI(population_1_n = 50, population_structure = \"F2\",     depth = 1:10, replications = 100, filter = 0.3, intervals = c(0.05,         0.025)): unused arguments (filter = 0.3, intervals = c(0.05, 0.025))"},{"path":"/reference/simulatePopulationSnpIndex.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate a Population's Alternate Allele Frequency — simulatePopulationSnpIndex","title":"Simulate a Population's Alternate Allele Frequency — simulatePopulationSnpIndex","text":"function calculates alternate allele frequency given number individuals population, based specified population structure. supports two population structures: F2 RIL. F2 population, alleles sampled probabilities reflecting Mendelian inheritance single heterozygous locus. RILs (Recombinant Inbred Lines), alleles sampled assuming equal probability inheritance either parent.","code":""},{"path":"/reference/simulatePopulationSnpIndex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate a Population's Alternate Allele Frequency — simulatePopulationSnpIndex","text":"","code":"simulatePopulationSnpIndex(n, population_structure)"},{"path":"/reference/simulatePopulationSnpIndex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate a Population's Alternate Allele Frequency — simulatePopulationSnpIndex","text":"n non-negative integer. number individuals population. population_structure string indicating population structure individuals. Valid options 'F2' F2 population 'RIL' Recombinant Inbred Lines. parameter influences alternate allele frequencies simulated.","code":""},{"path":"/reference/simulatePopulationSnpIndex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate a Population's Alternate Allele Frequency — simulatePopulationSnpIndex","text":"Returns numeric value representing calculated alternate allele frequency within population. value proportion ranging 0 1, 0 indicates presence alternate allele 1 indicates complete presence.","code":""},{"path":"/reference/smoothAlleleFrequencyMetric.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate tricube weighted statistics for each allele — smoothAlleleFrequencyMetric","title":"Calculate tricube weighted statistics for each allele — smoothAlleleFrequencyMetric","text":"Uses local regression (wrapper locfit) predict tricube smoothed version statistic supplied allele. works weighted average across neighboring alleles accounts Linkage disequilibrium (LD) minizing noise attributed allele calling errors. Values neighboring alleles within window weighted physical distance focal allele.","code":""},{"path":"/reference/smoothAlleleFrequencyMetric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate tricube weighted statistics for each allele — smoothAlleleFrequencyMetric","text":"","code":"smoothAlleleFrequencyMetric(allele_row_ranges, stat, window_size = 2e+06, ...)"},{"path":"/reference/smoothAlleleFrequencyMetric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate tricube weighted statistics for each allele — smoothAlleleFrequencyMetric","text":"allele_row_ranges GRangesList object record represents genomic coordinate allele stat vector statistics calculated alleles. might G statistic, see calculateGStatistic snp_index populationDepths, example. order vector must correspond order allele_row_ranges object. window_size window size (base pairs) bracketing allele calculate statitics. Magwene et. al recommend window size ~25 cM, also recommend optionally trying several window sizes test peaks - undersmoothed. ... arguments passed locfit subsequently locfit.raw() (lfproc). Usefull cases get \"vertex space warnings\"; Set maxk higher default 100. See locfit.raw().","code":""},{"path":"/reference/smoothAlleleFrequencyMetric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate tricube weighted statistics for each allele — smoothAlleleFrequencyMetric","text":"Returns vector weighted statistic caluculted tricube smoothing kernel","code":""},{"path":[]},{"path":"/reference/snpIndex.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the SNP index of a given sample — snpIndex","title":"Calculate the SNP index of a given sample — snpIndex","text":"Calculate SNP index given sample","code":""},{"path":"/reference/snpIndex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the SNP index of a given sample — snpIndex","text":"","code":"# S4 method for BSAExperiment snpIndex(object, sample_set = NULL)"},{"path":"/reference/snpIndex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the SNP index of a given sample — snpIndex","text":"object BSAExperiment object sample_set character vector samples, possibly length 1. entries sample_set must present sample column colData","code":""},{"path":[]},{"path":"/reference/summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize a BSAResults object — summary,BSAResults-method","title":"Summarize a BSAResults object — summary,BSAResults-method","text":"Summarize BSAResults object","code":""},{"path":"/reference/summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize a BSAResults object — summary,BSAResults-method","text":"","code":"# S4 method for BSAResults summary(object)"},{"path":"/reference/summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize a BSAResults object — summary,BSAResults-method","text":"object BSAExperiment object","code":""},{"path":"/reference/totalDepth.html","id":null,"dir":"Reference","previous_headings":"","what":"Getter/Setter of the BSAExperiment totalDepth assay matrix — totalDepth<-","title":"Getter/Setter of the BSAExperiment totalDepth assay matrix — totalDepth<-","text":"Set totalDepth matrix BSAExperiment object, retrieve . getter, vector BSAEXperiment colnames, possibly length 1, may passed extract subset samples BSAExperiment object","code":""},{"path":"/reference/totalDepth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Getter/Setter of the BSAExperiment totalDepth assay matrix — totalDepth<-","text":"","code":"# S4 method for BSAExperiment totalDepth(object) <- value  # S4 method for BSAExperiment totalDepth(object, sample_set = NULL)"},{"path":"/reference/totalDepth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Getter/Setter of the BSAExperiment totalDepth assay matrix — totalDepth<-","text":"object BSAExperiment object value numeric matrix storing total depth variant location BSAExperiment. dimensions matrix must equal dimension BSAExperiment, must row column names sample_set character vector samples, possibly length 1. entries sample_set must present sample column colData","code":""},{"path":"/reference/totalDepth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getter/Setter of the BSAExperiment totalDepth assay matrix — totalDepth<-","text":"setter return BSAExperiment object total depth slot updated. getter return matrix total depths","code":""},{"path":[]},{"path":"/reference/validatePositiveInteger.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate that a given variable is a positive integer — validatePositiveInteger","title":"Validate that a given variable is a positive integer — validatePositiveInteger","text":"Validate given variable positive integer","code":""},{"path":"/reference/validatePositiveInteger.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate that a given variable is a positive integer — validatePositiveInteger","text":"","code":"validatePositiveInteger(n, varname = \"Variable\")"},{"path":"/reference/validatePositiveInteger.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate that a given variable is a positive integer — validatePositiveInteger","text":"n variable validate varname name variable include error message","code":""},{"path":"/reference/variantFilter.html","id":null,"dir":"Reference","previous_headings":"","what":"Getter/Setter of the BSAExperiment variantFilter vector — variantFilter<-","title":"Getter/Setter of the BSAExperiment variantFilter vector — variantFilter<-","text":"variantFilter boolean vector added column rowRanges mcols. value FALSE indicates variant removed filtered dataset. passing vector setter, must equal number rows BSAExperiment object","code":""},{"path":"/reference/variantFilter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Getter/Setter of the BSAExperiment variantFilter vector — variantFilter<-","text":"","code":"# S4 method for BSAExperiment variantFilter(object) <- value  # S4 method for BSAExperiment variantFilter(object)"},{"path":"/reference/variantFilter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Getter/Setter of the BSAExperiment variantFilter vector — variantFilter<-","text":"object BSAExperiment object value boolean vector length equal rows BSAExperiment object. value FALSE indicates variant removed filtered dataset.","code":""},{"path":"/reference/variantFilter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getter/Setter of the BSAExperiment variantFilter vector — variantFilter<-","text":"setter return BSAExperiment object variant filter vector added mcols rowRanges. getter return boolean vector","code":""},{"path":[]},{"path":[]},{"path":"/news/index.html","id":"bugs-0-7-5-2","dir":"Changelog","previous_headings":"","what":"Bugs","title":"QTLseqr 0.7.5.2","text":"Import failure caused 0.7.5.1 fixed","code":""},{"path":[]},{"path":"/news/index.html","id":"bugs-0-7-5-1","dir":"Changelog","previous_headings":"","what":"Bugs","title":"QTLseqr 0.7.5.1","text":"Import failure caused 0.7.5 fixed","code":""},{"path":[]},{"path":"/news/index.html","id":"bugs-0-7-5","dir":"Changelog","previous_headings":"","what":"Bugs","title":"QTLseqr 0.7.5","text":"reading files sometimes guess wrong. Set default col_character. help large read depth importing.","code":""},{"path":[]},{"path":"/news/index.html","id":"bugs-0-7-4","dir":"Changelog","previous_headings":"","what":"Bugs","title":"QTLseqr 0.7.4","text":"Fixed compatibility issue new versions modeest package. Please note now QTLseqr requires modeest (> 2.3.2)","code":""},{"path":[]},{"path":"/news/index.html","id":"updates-0-7-3","dir":"Changelog","previous_headings":"","what":"Updates","title":"QTLseqr 0.7.3","text":"Added ... functions use tricubed smoothing functions. users can easily pass higher maxk values raw.locfit. Added “note window sizes” vignette.","code":""},{"path":[]},{"path":"/news/index.html","id":"updates-0-7-2","dir":"Changelog","previous_headings":"","what":"Updates","title":"QTLseqr 0.7.2","text":"Added depthDifference paramater filterSNPs function. helps filtering SNPs high absolute differences read depth bulks. getQTLTable now also reports genomic position maximum peak. Updates vignette filtering SNPs.","code":""},{"path":[]},{"path":"/news/index.html","id":"bug-fixes-0-7-1","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"QTLseqr 0.7.1","text":"Corrected bug checking negative bulksizes","code":""},{"path":[]},{"path":"/news/index.html","id":"updates-0-7-0","dir":"Changelog","previous_headings":"","what":"Updates","title":"QTLseqr 0.7.0","text":"Added importFromTable function allow users import delimited file. Allowed different size bulks runQTLseqAnalysis. Updated vignettes documentation files. documentation link fixes","code":""},{"path":[]},{"path":"/news/index.html","id":"bug-fixes-0-6-5","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"QTLseqr 0.6.5","text":"Corrected bug import happend high low bulks named things looked like CHROM, POS, ALT REF. Now function ignores columns renaming HIGH.xx LOW.xx. Also better definition column types force CHROM char POS int.","code":""},{"path":[]},{"path":"/news/index.html","id":"bug-fixes-0-6-4","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"QTLseqr 0.6.4","text":"Corrected windowSize set 1e6 instead parameter function ‘runQTLanalysis’. causing problems calculating window depth.","code":""},{"path":[]},{"path":"/news/index.html","id":"bug-fixes-0-6-3","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"QTLseqr 0.6.3","text":"Corrected call global env variables importFromGATK. Fixed issues bulk names periods . Bug fix export functions using table variable name.","code":""},{"path":[]},{"path":"/news/index.html","id":"bug-fixes-0-6-2","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"QTLseqr 0.6.2","text":"Added responsive x axis brakes. Axis brake labels getting squashed small chromosomes.","code":""},{"path":[]},{"path":"/news/index.html","id":"updates-0-6-1","dir":"Changelog","previous_headings":"","what":"Updates","title":"QTLseqr 0.6.1","text":"added plotSimulatedThresholds function help users visuallize confisence intervals manual corrections mods","code":""},{"path":[]},{"path":"/news/index.html","id":"updates-0-6-0","dir":"Changelog","previous_headings":"","what":"Updates","title":"QTLseqr 0.6.0","text":"Added QTLseq analysis functionality plotQTLStats can now plot confidence intervals Δ(SNP-index) plots Export functions run faster allow detection QTL either “Gprime” “QTLseq” methods removed Bioconductor dependency","code":""},{"path":[]},{"path":"/news/index.html","id":"updates-0-5-8","dir":"Changelog","previous_headings":"","what":"Updates","title":"QTLseqr 0.5.8","text":"changed ΔSNP-index Δ(SNP-index)","code":""},{"path":[]},{"path":"/news/index.html","id":"updates-0-5-7","dir":"Changelog","previous_headings":"","what":"Updates","title":"QTLseqr 0.5.7","text":"plotQTLStats now allows chromosome facet shape scaling using ‘scaleChroms’ parameter","code":""},{"path":[]},{"path":"/news/index.html","id":"bug-fixes-0-5-6","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"QTLseqr 0.5.6","text":"Added package locfit Imports.","code":""},{"path":[]},{"path":"/news/index.html","id":"updates-0-5-5","dir":"Changelog","previous_headings":"","what":"Updates","title":"QTLseqr 0.5.5","text":"plotGprimeDist null distribution label accurate.","code":""},{"path":[]},{"path":"/news/index.html","id":"updates-0-5-4","dir":"Changelog","previous_headings":"","what":"Updates","title":"QTLseqr 0.5.4","text":"plotGprimeDist now plots histograms filtered raw data. overlaid null dist. easier interpret.","code":""},{"path":[]},{"path":"/news/index.html","id":"new-features-0-5-3","dir":"Changelog","previous_headings":"","what":"New features","title":"QTLseqr 0.5.3","text":"Added NEWS.md file track changes package. plotGprimeDist plotting now includes density plots data, data QTL filtering null-distribution assuming mean variance filtered set.","code":""},{"path":"/news/index.html","id":"bug-fixes-0-5-3","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"QTLseqr 0.5.3","text":"Corrected bug getFDRThreshold function using regular p-values adjusted pvalues define threshold","code":""}]
